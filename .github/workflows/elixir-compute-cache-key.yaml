name: compute-cache-key

on:
    workflow_call:
        inputs:
            docker-service:
                required: true

                type: string

        outputs:
            cache-key:
                value: ${{ jobs.compute-cache-key.outputs.cache-key }}

jobs:
    compute-cache-key:
        name: Cache Key

        outputs:
            cache-key: ${{ steps.compute-cache-key.outputs.cache-key }}

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

            - uses: docker/login-action@v3

              with:
                  password: ${{ secrets.GITHUB_TOKEN }}

                  registry: ghcr.io

                  username: ${{ github.actor }}

            - name: Pull docker images

              run: |
                  docker-compose \
                    -f ./.docker/docker-compose.yaml \
                    pull

            - name: Build cache key

              run: |
                  elixir=$(\
                    docker-compose \
                      -f ./.docker/docker-compose.yaml \
                      run ${{ inputs.docker-service }} \
                      elixir -e "IO.puts(System.version())" | sed -e "s/\r//g" \
                  )

                  erlang=$(\
                    docker-compose \
                      -f ./.docker/docker-compose.yaml \
                      run ${{ inputs.docker-service }} \
                      erl -noshell -eval "{ok, Version} = file:read_file(filename:join([code:root_dir(), \"releases\", erlang:system_info(otp_release), \"OTP_VERSION\"])), io:fwrite(Version), halt()." \
                  )

                  echo "$elixir+$erlang" > CACHEKEY

            - id: compute-cache-key

              name: Compute cache key

              run: |
                  cacheKey=${{ hashFiles('mix.lock', 'CACHEKEY') }}

                  echo "cache-key=$cacheKey" >> $GITHUB_OUTPUT
