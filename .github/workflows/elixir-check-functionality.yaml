name: check-functionality

on:
    workflow_call:
        inputs:
            cache-key:
                required: true

                type: string

            docker-service:
                required: true

                type: string

            project-name:
                required: true

                type: string

            setup-db:
                required: false

                type: boolean

jobs:
    run-unit-tests:
        name: Functionality

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

            - uses: actions/cache@v4

              with:
                  key: ${{ github.job }}-${{ inputs.cache-key }}

                  path: |
                      _build
                      deps

            - uses: docker/login-action@v3

              with:
                  password: ${{ secrets.GITHUB_TOKEN }}

                  registry: ghcr.io

                  username: ${{ github.actor }}

            - name: Pull docker images

              run: |
                  docker-compose \
                    -f ./.docker/docker-compose.yaml \
                    -f ./.docker/docker-compose-gha.yaml \
                    pull

            - name: Install dependencies

              run: |
                  docker-compose \
                    -f ./.docker/docker-compose.yaml \
                    -f ./.docker/docker-compose-gha.yaml \
                    run ${{ inputs.docker-service }} \
                    mix deps.get

            - name: Compile application

              run: |
                  docker-compose \
                    -f ./.docker/docker-compose.yaml \
                    -f ./.docker/docker-compose-gha.yaml \
                   run \
                     -e MIX_ENV=test \
                     ${{ inputs.docker-service }} \
                     mix compile --warnings-as-errors

            - name: Setup database

              if: ${{ inputs.setup-db }}

              run: |
                  docker-compose \
                    -f ./.docker/docker-compose.yaml \
                    -f ./.docker/docker-compose-gha.yaml \
                   run \
                     -e MIX_ENV=test \
                     ${{ inputs.docker-service }} \
                     mix do ecto.create, ecto.migrate

            - name: Run unit tests

              run: |
                  docker-compose \
                    -f ./.docker/docker-compose.yaml \
                    -f ./.docker/docker-compose-gha.yaml \
                    run ${{ inputs.docker-service }} \
                    mix test

            - name: Clean up build

              run: |
                  docker-compose \
                    -f ./.docker/docker-compose.yaml \
                    -f ./.docker/docker-compose-gha.yaml \
                    run ${{ inputs.docker-service }} \
                    rm -rf ./_build/test/lib/${{ inputs.project-name }}
